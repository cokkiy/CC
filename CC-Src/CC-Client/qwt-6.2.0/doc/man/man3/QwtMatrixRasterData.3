.TH "QwtMatrixRasterData" 3 "Sun Jul 18 2021" "Version 6.2.0" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtMatrixRasterData \- A class representing a matrix of values as raster data\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <qwt_matrix_raster_data\&.h>\fP
.PP
Inherits \fBQwtRasterData\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBResampleMode\fP { \fBNearestNeighbour\fP, \fBBilinearInterpolation\fP, \fBBicubicInterpolation\fP }"
.br
.RI "Resampling algorithm The default setting is NearestNeighbour;\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtMatrixRasterData\fP ()"
.br
.RI "Constructor\&. "
.ti -1c
.RI "virtual \fB~QwtMatrixRasterData\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "void \fBsetResampleMode\fP (\fBResampleMode\fP mode)"
.br
.RI "Set the resampling algorithm\&. "
.ti -1c
.RI "\fBResampleMode\fP \fBresampleMode\fP () const"
.br
.ti -1c
.RI "void \fBsetInterval\fP (Qt::Axis, const \fBQwtInterval\fP &)"
.br
.RI "Assign the bounding interval for an axis\&. "
.ti -1c
.RI "virtual \fBQwtInterval\fP \fBinterval\fP (Qt::Axis axis) const override final"
.br
.ti -1c
.RI "void \fBsetValueMatrix\fP (const \fBQVector\fP< double > &values, int \fBnumColumns\fP)"
.br
.RI "Assign a value matrix\&. "
.ti -1c
.RI "const \fBQVector\fP< double > \fBvalueMatrix\fP () const"
.br
.ti -1c
.RI "void \fBsetValue\fP (int row, int col, double \fBvalue\fP)"
.br
.RI "Change a single value in the matrix\&. "
.ti -1c
.RI "int \fBnumColumns\fP () const"
.br
.ti -1c
.RI "int \fBnumRows\fP () const"
.br
.ti -1c
.RI "virtual QRectF \fBpixelHint\fP (const QRectF &) const override"
.br
.RI "Calculate the pixel hint\&. "
.ti -1c
.RI "virtual double \fBvalue\fP (double x, double y) const override"
.br
.in -1c
.SH "Detailed Description"
.PP 
A class representing a matrix of values as raster data\&. 

\fBQwtMatrixRasterData\fP implements an interface for a matrix of equidistant values, that can be used by a \fBQwtPlotRasterItem\fP\&. It implements a couple of resampling algorithms, to provide values for positions, that or not on the value matrix\&. 
.PP
Definition at line 28 of file qwt_matrix_raster_data\&.h\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBQwtMatrixRasterData::ResampleMode\fP"

.PP
Resampling algorithm The default setting is NearestNeighbour;\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fINearestNeighbour \fP\fP
Return the value from the matrix, that is nearest to the the requested position\&. 
.TP
\fB\fIBilinearInterpolation \fP\fP
Interpolate the value from the distances and values of the 4 surrounding values in the matrix, 
.TP
\fB\fIBicubicInterpolation \fP\fP
Interpolate the value from the 16 surrounding values in the matrix using hermite bicubic interpolation 
.PP
Definition at line 35 of file qwt_matrix_raster_data\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBQwtInterval\fP QwtMatrixRasterData::interval (Qt::Axis axis) const\fC [final]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
\fBReturns\fP
.RS 4
Bounding interval for an axis 
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetInterval\fP 
.RE
.PP

.PP
Implements \fBQwtRasterData\fP\&.
.PP
Definition at line 134 of file qwt_matrix_raster_data\&.cpp\&.
.SS "int QwtMatrixRasterData::numColumns () const"

.PP
\fBReturns\fP
.RS 4
Number of columns of the value matrix 
.RE
.PP
\fBSee also\fP
.RS 4
\fBvalueMatrix()\fP, \fBnumRows()\fP, \fBsetValueMatrix()\fP 
.RE
.PP

.PP
Definition at line 195 of file qwt_matrix_raster_data\&.cpp\&.
.SS "int QwtMatrixRasterData::numRows () const"

.PP
\fBReturns\fP
.RS 4
Number of rows of the value matrix 
.RE
.PP
\fBSee also\fP
.RS 4
\fBvalueMatrix()\fP, \fBnumColumns()\fP, \fBsetValueMatrix()\fP 
.RE
.PP

.PP
Definition at line 204 of file qwt_matrix_raster_data\&.cpp\&.
.SS "QRectF QwtMatrixRasterData::pixelHint (const QRectF & area) const\fC [override]\fP, \fC [virtual]\fP"

.PP
Calculate the pixel hint\&. \fBpixelHint()\fP returns the geometry of a pixel, that can be used to calculate the resolution and alignment of the plot item, that is representing the data\&.
.PP
.IP "\(bu" 2
NearestNeighbour
.br
 \fBpixelHint()\fP returns the surrounding pixel of the top left value in the matrix\&.
.IP "\(bu" 2
BilinearInterpolation
.br
 Returns an empty rectangle recommending to render in target device ( f\&.e\&. screen ) resolution\&.
.PP
.PP
\fBParameters\fP
.RS 4
\fIarea\fP Requested area, ignored 
.RE
.PP
\fBReturns\fP
.RS 4
Calculated hint
.RE
.PP
\fBSee also\fP
.RS 4
\fBResampleMode\fP, setMatrix(), \fBsetInterval()\fP 
.RE
.PP

.PP
Reimplemented from \fBQwtRasterData\fP\&.
.PP
Definition at line 229 of file qwt_matrix_raster_data\&.cpp\&.
.SS "\fBQwtMatrixRasterData::ResampleMode\fP QwtMatrixRasterData::resampleMode () const"

.PP
\fBReturns\fP
.RS 4
resampling algorithm 
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetResampleMode()\fP, \fBvalue()\fP 
.RE
.PP

.PP
Definition at line 99 of file qwt_matrix_raster_data\&.cpp\&.
.SS "void QwtMatrixRasterData::setInterval (Qt::Axis axis, const \fBQwtInterval\fP & interval)"

.PP
Assign the bounding interval for an axis\&. Setting the bounding intervals for the X/Y axis is mandatory to define the positions for the values of the value matrix\&. The interval in Z direction defines the possible range for the values in the matrix, what is f\&.e used by \fBQwtPlotSpectrogram\fP to map values to colors\&. The Z-interval might be the bounding interval of the values in the matrix, but usually it isn't\&. ( f\&.e a interval of 0\&.0-100\&.0 for values in percentage )
.PP
\fBParameters\fP
.RS 4
\fIaxis\fP X, Y or Z axis 
.br
\fIinterval\fP Interval
.RE
.PP
\fBSee also\fP
.RS 4
\fBQwtRasterData::interval()\fP, \fBsetValueMatrix()\fP 
.RE
.PP

.PP
Definition at line 120 of file qwt_matrix_raster_data\&.cpp\&.
.SS "void QwtMatrixRasterData::setResampleMode (\fBResampleMode\fP mode)"

.PP
Set the resampling algorithm\&. 
.PP
\fBParameters\fP
.RS 4
\fImode\fP Resampling mode 
.RE
.PP
\fBSee also\fP
.RS 4
\fBresampleMode()\fP, \fBvalue()\fP 
.RE
.PP

.PP
Definition at line 90 of file qwt_matrix_raster_data\&.cpp\&.
.SS "void QwtMatrixRasterData::setValue (int row, int col, double value)"

.PP
Change a single value in the matrix\&. 
.PP
\fBParameters\fP
.RS 4
\fIrow\fP Row index 
.br
\fIcol\fP Column index 
.br
\fIvalue\fP New value
.RE
.PP
\fBSee also\fP
.RS 4
\fBvalue()\fP, \fBsetValueMatrix()\fP 
.RE
.PP

.PP
Definition at line 181 of file qwt_matrix_raster_data\&.cpp\&.
.SS "void QwtMatrixRasterData::setValueMatrix (const \fBQVector\fP< double > & values, int numColumns)"

.PP
Assign a value matrix\&. The positions of the values are calculated by dividing the bounding rectangle of the X/Y intervals into equidistant rectangles ( pixels )\&. Each value corresponds to the center of a pixel\&.
.PP
\fBParameters\fP
.RS 4
\fIvalues\fP Vector of values 
.br
\fInumColumns\fP Number of columns
.RE
.PP
\fBSee also\fP
.RS 4
\fBvalueMatrix()\fP, \fBnumColumns()\fP, \fBnumRows()\fP, \fBsetInterval()\fP() 
.RE
.PP

.PP
Definition at line 155 of file qwt_matrix_raster_data\&.cpp\&.
.SS "double QwtMatrixRasterData::value (double x, double y) const\fC [override]\fP, \fC [virtual]\fP"

.PP
\fBReturns\fP
.RS 4
the value at a raster position
.RE
.PP
\fBParameters\fP
.RS 4
\fIx\fP X value in plot coordinates 
.br
\fIy\fP Y value in plot coordinates
.RE
.PP
\fBSee also\fP
.RS 4
\fBResampleMode\fP 
.RE
.PP

.PP
Implements \fBQwtRasterData\fP\&.
.PP
Definition at line 256 of file qwt_matrix_raster_data\&.cpp\&.
.SS "const \fBQVector\fP< double > QwtMatrixRasterData::valueMatrix () const"

.PP
\fBReturns\fP
.RS 4
Value matrix 
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetValueMatrix()\fP, \fBnumColumns()\fP, \fBnumRows()\fP, \fBsetInterval()\fP 
.RE
.PP

.PP
Definition at line 167 of file qwt_matrix_raster_data\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code\&.
