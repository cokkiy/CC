.TH "QwtLinearScaleEngine" 3 "Sun Jul 18 2021" "Version 6.2.0" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtLinearScaleEngine \- A scale engine for linear scales\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <qwt_scale_engine\&.h>\fP
.PP
Inherits \fBQwtScaleEngine\fP\&.
.PP
Inherited by \fBQwtDateScaleEngine\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtLinearScaleEngine\fP (uint \fBbase\fP=10)"
.br
.ti -1c
.RI "virtual \fB~QwtLinearScaleEngine\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "virtual void \fBautoScale\fP (int maxNumSteps, double &x1, double &x2, double &stepSize) const override"
.br
.ti -1c
.RI "virtual \fBQwtScaleDiv\fP \fBdivideScale\fP (double x1, double x2, int maxMajorSteps, int maxMinorSteps, double stepSize=0\&.0) const override"
.br
.RI "Calculate a scale division for an interval\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtInterval\fP \fBalign\fP (const \fBQwtInterval\fP &, double stepSize) const"
.br
.RI "Align an interval to a step size\&. "
.ti -1c
.RI "void \fBbuildTicks\fP (const \fBQwtInterval\fP &, double stepSize, int maxMinorSteps, \fBQList\fP< double > ticks[\fBQwtScaleDiv::NTickTypes\fP]) const"
.br
.RI "Calculate ticks for an interval\&. "
.ti -1c
.RI "\fBQList\fP< double > \fBbuildMajorTicks\fP (const \fBQwtInterval\fP &interval, double stepSize) const"
.br
.RI "Calculate major ticks for an interval\&. "
.ti -1c
.RI "void \fBbuildMinorTicks\fP (const \fBQList\fP< double > &majorTicks, int maxMinorSteps, double stepSize, \fBQList\fP< double > &minorTicks, \fBQList\fP< double > &mediumTicks) const"
.br
.RI "Calculate minor/medium ticks for major ticks\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A scale engine for linear scales\&. 

The step size will fit into the pattern $\left\{ 1,2,5\right\} \cdot 10^{n}$, where n is an integer\&. 
.PP
Definition at line 151 of file qwt_scale_engine\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QwtLinearScaleEngine::QwtLinearScaleEngine (uint base = \fC10\fP)\fC [explicit]\fP"
Constructor
.PP
\fBParameters\fP
.RS 4
\fIbase\fP Base of the scale engine 
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetBase()\fP 
.RE
.PP

.PP
Definition at line 511 of file qwt_scale_engine\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBQwtInterval\fP QwtLinearScaleEngine::align (const \fBQwtInterval\fP & interval, double stepSize) const\fC [protected]\fP"

.PP
Align an interval to a step size\&. The limits of an interval are aligned that both are integer multiples of the step size\&.
.PP
\fBParameters\fP
.RS 4
\fIinterval\fP Interval 
.br
\fIstepSize\fP Step size
.RE
.PP
\fBReturns\fP
.RS 4
Aligned interval 
.RE
.PP

.PP
Definition at line 741 of file qwt_scale_engine\&.cpp\&.
.SS "void QwtLinearScaleEngine::autoScale (int maxNumSteps, double & x1, double & x2, double & stepSize) const\fC [override]\fP, \fC [virtual]\fP"
Align and divide an interval
.PP
\fBParameters\fP
.RS 4
\fImaxNumSteps\fP Max\&. number of steps 
.br
\fIx1\fP First limit of the interval (In/Out) 
.br
\fIx2\fP Second limit of the interval (In/Out) 
.br
\fIstepSize\fP Step size (Out)
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetAttribute()\fP 
.RE
.PP

.PP
Implements \fBQwtScaleEngine\fP\&.
.PP
Reimplemented in \fBQwtDateScaleEngine\fP\&.
.PP
Definition at line 531 of file qwt_scale_engine\&.cpp\&.
.SS "\fBQList\fP< double > QwtLinearScaleEngine::buildMajorTicks (const \fBQwtInterval\fP & interval, double stepSize) const\fC [protected]\fP"

.PP
Calculate major ticks for an interval\&. 
.PP
\fBParameters\fP
.RS 4
\fIinterval\fP Interval 
.br
\fIstepSize\fP Step size
.RE
.PP
\fBReturns\fP
.RS 4
Calculated ticks 
.RE
.PP

.PP
Definition at line 664 of file qwt_scale_engine\&.cpp\&.
.SS "void QwtLinearScaleEngine::buildMinorTicks (const \fBQList\fP< double > & majorTicks, int maxMinorSteps, double stepSize, \fBQList\fP< double > & minorTicks, \fBQList\fP< double > & mediumTicks) const\fC [protected]\fP"

.PP
Calculate minor/medium ticks for major ticks\&. 
.PP
\fBParameters\fP
.RS 4
\fImajorTicks\fP Major ticks 
.br
\fImaxMinorSteps\fP Maximum number of minor steps 
.br
\fIstepSize\fP Step size 
.br
\fIminorTicks\fP Array to be filled with the calculated minor ticks 
.br
\fImediumTicks\fP Array to be filled with the calculated medium ticks 
.RE
.PP

.PP
Definition at line 692 of file qwt_scale_engine\&.cpp\&.
.SS "void QwtLinearScaleEngine::buildTicks (const \fBQwtInterval\fP & interval, double stepSize, int maxMinorSteps, \fBQList\fP< double > ticks[QwtScaleDiv::NTickTypes]) const\fC [protected]\fP"

.PP
Calculate ticks for an interval\&. 
.PP
\fBParameters\fP
.RS 4
\fIinterval\fP Interval 
.br
\fIstepSize\fP Step size 
.br
\fImaxMinorSteps\fP Maximum number of minor steps 
.br
\fIticks\fP Arrays to be filled with the calculated ticks
.RE
.PP
\fBSee also\fP
.RS 4
\fBbuildMajorTicks()\fP, \fBbuildMinorTicks\fP 
.RE
.PP

.PP
Definition at line 627 of file qwt_scale_engine\&.cpp\&.
.SS "\fBQwtScaleDiv\fP QwtLinearScaleEngine::divideScale (double x1, double x2, int maxMajorSteps, int maxMinorSteps, double stepSize = \fC0\&.0\fP) const\fC [override]\fP, \fC [virtual]\fP"

.PP
Calculate a scale division for an interval\&. 
.PP
\fBParameters\fP
.RS 4
\fIx1\fP First interval limit 
.br
\fIx2\fP Second interval limit 
.br
\fImaxMajorSteps\fP Maximum for the number of major steps 
.br
\fImaxMinorSteps\fP Maximum number of minor steps 
.br
\fIstepSize\fP Step size\&. If stepSize == 0, the engine calculates one\&.
.RE
.PP
\fBReturns\fP
.RS 4
Calculated scale division 
.RE
.PP

.PP
Implements \fBQwtScaleEngine\fP\&.
.PP
Reimplemented in \fBQwtDateScaleEngine\fP\&.
.PP
Definition at line 577 of file qwt_scale_engine\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code\&.
