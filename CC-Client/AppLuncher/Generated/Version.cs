// **********************************************************************
//
// Copyright (c) 2003-2018 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.5
//
// <auto-generated>
//
// Generated from file `Version.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace CC
{
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class Version : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public int Major;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public int Minor;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public int Build;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public int @Private;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public string ProductVersion;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public Version()
        {
            ProductVersion = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public Version(int Major, int Minor, int Build, int @Private, string ProductVersion)
        {
            this.Major = Major;
            this.Minor = Minor;
            this.Build = Build;
            this.@Private = @Private;
            this.ProductVersion = ProductVersion;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::CC::Version");
            IceInternal.HashUtil.hashAdd(ref h__, Major);
            IceInternal.HashUtil.hashAdd(ref h__, Minor);
            IceInternal.HashUtil.hashAdd(ref h__, Build);
            IceInternal.HashUtil.hashAdd(ref h__, @Private);
            IceInternal.HashUtil.hashAdd(ref h__, ProductVersion);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            Version o__ = (Version)other__;
            if(!Major.Equals(o__.Major))
            {
                return false;
            }
            if(!Minor.Equals(o__.Minor))
            {
                return false;
            }
            if(!Build.Equals(o__.Build))
            {
                return false;
            }
            if(!@Private.Equals(o__.@Private))
            {
                return false;
            }
            if(ProductVersion == null)
            {
                if(o__.ProductVersion != null)
                {
                    return false;
                }
            }
            else
            {
                if(!ProductVersion.Equals(o__.ProductVersion))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public static bool operator==(Version lhs__, Version rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public static bool operator!=(Version lhs__, Version rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeInt(Major);
            os__.writeInt(Minor);
            os__.writeInt(Build);
            os__.writeInt(@Private);
            os__.writeString(ProductVersion);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public void read__(IceInternal.BasicStream is__)
        {
            Major = is__.readInt();
            Minor = is__.readInt();
            Build = is__.readInt();
            @Private = is__.readInt();
            ProductVersion = is__.readString();
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public static void write__(IceInternal.BasicStream os__, Version v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public static Version read__(IceInternal.BasicStream is__, Version v__)
        {
            if(v__ == null)
            {
                v__ = new Version();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly Version nullMarshalValue__ = new Version();

        #endregion
    }

    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class ServerVersion : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public CC.Version ServicesVersion;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public CC.Version AppLuncherVersion;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public ServerVersion()
        {
            ServicesVersion = new CC.Version();
            AppLuncherVersion = new CC.Version();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public ServerVersion(CC.Version ServicesVersion, CC.Version AppLuncherVersion)
        {
            this.ServicesVersion = ServicesVersion;
            this.AppLuncherVersion = AppLuncherVersion;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public override int GetHashCode()
        {
            int h__ = 5381;
            IceInternal.HashUtil.hashAdd(ref h__, "::CC::ServerVersion");
            IceInternal.HashUtil.hashAdd(ref h__, ServicesVersion);
            IceInternal.HashUtil.hashAdd(ref h__, AppLuncherVersion);
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            ServerVersion o__ = (ServerVersion)other__;
            if(ServicesVersion == null)
            {
                if(o__.ServicesVersion != null)
                {
                    return false;
                }
            }
            else
            {
                if(!ServicesVersion.Equals(o__.ServicesVersion))
                {
                    return false;
                }
            }
            if(AppLuncherVersion == null)
            {
                if(o__.AppLuncherVersion != null)
                {
                    return false;
                }
            }
            else
            {
                if(!AppLuncherVersion.Equals(o__.AppLuncherVersion))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public static bool operator==(ServerVersion lhs__, ServerVersion rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public static bool operator!=(ServerVersion lhs__, ServerVersion rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public void write__(IceInternal.BasicStream os__)
        {
            CC.Version.write__(os__, ServicesVersion);
            CC.Version.write__(os__, AppLuncherVersion);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public void read__(IceInternal.BasicStream is__)
        {
            ServicesVersion = CC.Version.read__(is__, ServicesVersion);
            AppLuncherVersion = CC.Version.read__(is__, AppLuncherVersion);
        }
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public static void write__(IceInternal.BasicStream os__, ServerVersion v__)
        {
            if(v__ == null)
            {
                nullMarshalValue__.write__(os__);
            }
            else
            {
                v__.write__(os__);
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.5")]
        public static ServerVersion read__(IceInternal.BasicStream is__, ServerVersion v__)
        {
            if(v__ == null)
            {
                v__ = new ServerVersion();
            }
            v__.read__(is__);
            return v__;
        }
        
        private static readonly ServerVersion nullMarshalValue__ = new ServerVersion();

        #endregion
    }
}

namespace CC
{
}
